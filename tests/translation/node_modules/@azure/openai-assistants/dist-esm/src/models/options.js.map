{"version":3,"file":"options.js","sourceRoot":"","sources":["../../../src/models/options.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { OperationOptions } from \"@azure-rest/core-client\";\nimport { ListSortOrder, FilePurpose } from \"./models.js\";\n\n/** The details used to create an assistant. */\nexport interface CreateAssistantOptions extends OperationOptions {}\n\n/** The details used to list assistants. */\nexport interface ListAssistantsOptions extends OperationOptions {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /** Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\n/** The details used to get an assistant. */\nexport interface GetAssistantOptions extends OperationOptions {}\n\n/** The details used to update an assistant. */\nexport interface UpdateAssistantRequestOptions extends OperationOptions {}\n\n/** The details used to delete an assistant. */\nexport interface DeleteAssistantOptions extends OperationOptions {}\n\n/** The details used to create an assistant file. */\nexport interface CreateAssistantFileOptions extends OperationOptions {}\n\n/** The details used to list assistant files. */\nexport interface ListAssistantFilesOptions extends OperationOptions {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /** Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\n/** The details used to get an assistant file. */\nexport interface GetAssistantFileOptions extends OperationOptions {}\n\n/** The details used to delete an assistant file. */\nexport interface DeleteAssistantFileOptions extends OperationOptions {}\n\n/** The details used to create a thread. */\nexport interface CreateThreadOptions extends OperationOptions {}\n\n/** The details used to get a thread. */\nexport interface GetThreadOptions extends OperationOptions {}\n\n/** The details used to update a thread. */\nexport interface UpdateThreadOptions extends OperationOptions {\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string>;\n}\n\n/** The details used to delete a thread. */\nexport interface DeleteThreadOptions extends OperationOptions {}\n\n/** The details used to create a message. */\nexport interface CreateMessageOptions extends OperationOptions {\n  /** A list of up to 10 file IDs to associate with the message, as used by tools like 'code_interpreter' or 'retrieval' that can read files. */\n  fileIds?: string[];\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string>;\n}\n\n/** The details used to list messages. */\nexport interface ListMessagesOptions extends OperationOptions {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /** Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\n/** The details used to get a message. */\nexport interface GetMessageOptions extends OperationOptions {}\n\n/** The details used to update a message. */\nexport interface UpdateMessageOptions extends OperationOptions {\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string>;\n}\n\n/** The details used to list message files. */\nexport interface ListMessageFilesOptions extends OperationOptions {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /** Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\n/** The details used to get a message file. */\nexport interface GetMessageFileOptions extends OperationOptions {}\n\n/** The details used to create a run request. */\nexport interface CreateRunRequestOptions extends OperationOptions {}\n\n/** The details used to list runs. */\nexport interface ListRunsOptions extends OperationOptions {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /** Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\n/** The details used to get a run. */\nexport interface GetRunOptions extends OperationOptions {}\n\n/** The details used to update a run. */\nexport interface UpdateRunOptions extends OperationOptions {\n  /** A set of up to 16 key/value pairs that can be attached to an object, used for storing additional information about that object in a structured format. Keys may be up to 64 characters in length and values may be up to 512 characters in length. */\n  metadata?: Record<string, string>;\n}\n\n/** The details used to submit tool outputs to a run. */\nexport interface SubmitToolOutputsToRunOptions extends OperationOptions {}\n\n/** The details used to cancel a run. */\nexport interface CancelRunOptions extends OperationOptions {}\n\n/** The details used to create and run a thread. */\nexport interface CreateThreadAndRunOptions extends OperationOptions {}\n\n/** The details used to get a run step. */\nexport interface GetRunStepOptions extends OperationOptions {}\n\n/** The details used to list run steps. */\nexport interface ListRunStepsOptions extends OperationOptions {\n  /** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. */\n  limit?: number;\n  /** Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. */\n  order?: ListSortOrder;\n  /** A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. */\n  after?: string;\n  /** A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. */\n  before?: string;\n}\n\n/** The details used to list files. */\nexport interface ListFilesOptions extends OperationOptions {\n  /** A value that, when provided, limits list results to files matching the corresponding purpose. */\n  purpose?: FilePurpose;\n}\n\n/** The details used to upload files. */\nexport interface UploadFileOptions extends OperationOptions {\n  /** The 'content-type' header value, always 'multipart/format-data' for this operation. */\n  contentType?: string;\n  /** A filename to associate with the uploaded data. */\n  filename?: string;\n}\n\n/** The details used to delete files. */\nexport interface DeleteFileOptions extends OperationOptions {}\n\n/** The details used to get files. */\nexport interface GetFileOptions extends OperationOptions {}\n"]}